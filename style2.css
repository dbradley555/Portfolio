:root {
  --heather: #afc3cb;
  --lavender: #b482ba;
  --jacarta: #39265b;
  --mntnmeadow: #14a296;
}

/* Dropdown Button */
.dropbtn2 {
  background-color: var(--jacarta);
  color: white;
  padding: 16px;
  font-size: 16px;
  border: none;
  cursor: pointer;
  transition: all 500ms ease-in-out;
}

/* Dropdown button on hover & focus */
.dropbtn2:hover,
.dropbtn2:focus {
  background-color: var(--lavender);
  transition: all 500ms ease-in-out;
}

/* The container <div> - needed to position the dropdown content */
.dropdown2 {
  position: relative;
  display: flex;
  transition: flex-basis 500ms linear;
}

/* Dropdown Content (Hidden by Default) */
.dropdown-card {
  display: none;
  position: relative;
  background-color: var(--heather);
  min-width: 160px;
  box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);
  z-index: 1;
}

/* Show the dropdown menu (use JS to add this class to the .dropdown-content container when the user clicks on the dropdown button) */
.show {
  display: block;
  transition: all 500ms ease-in-out;
}

.card-display {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  min-height: 100%;
  padding: 2rem;
  color: var(--jacarta);
  outline: 2px dashed var(--lavender);
  outline-offset: -2px;
  transition: flex-basis 500ms linear;
}

.img-card .card-header {
  /* use position and negative margins to move title of card over the card's outline and create an overlap effect */
  position: relative;
  margin: -1rem 2rem -1.5rem 2rem;
  padding: 0.5rem 1rem;
  background-color: var(--heather);
  color: var(--jacarta);
  border: 2px solid var(--lavender);
  border-radius: 8px;
  transition: all 0.5s ease-in-out;
}

/* set an outer and inner drop shadow on the card to create a glowing effect on hover */
.img-card:hover .card-header {
  box-shadow: inset 0px 0px 8px var(--jacarta), 0 0 15px var(--jacarta);
  transition: all 500ms ease-in-out;
}
/* add a plus sign after the project title to indicate to the user that you can click */
.img-card .card-header::after {
  content: '+';
  color: var(--lavender);
  opacity: 30%;
  display: block;
  margin-bottom: -10px;
  float: right;
  cursor: pointer;
  transition: all 0.5s ease-in-out;
}

.img-card:hover .card-header::after {
  color: var(--jacarta);
  opacity: 100%;
  transition: all 500ms ease-in-out;
}

/* each card's img block grows to the height of the largest img block on the page, making each card even in height */
.img-card .img-block {
  flex-grow: 1;
  transition: flex-basis 500ms linear;
}

.img-card img {
  /* set styles to make it so img wraps in <pre> instead of overflowing */
  white-space: pre-wrap;
  overflow: auto;
  tab-size: 4;
  padding: 1.2rem 1rem;
  color: var(--lavender);
  border-radius: 8px;
  /* use linear-gradient() function to create a fading background  */
  background-image: linear-gradient(var(--lavender) 40%, var(--jacarta) 100%);
  display: flex;
  align-items: center;
  max-width: 100%;
  transition: flex-basis 500ms linear;
}

/* create our main grid with flexbox, use negative margins to offset the padding on the .card-column class */
.row {
  display: flex;
  flex-wrap: wrap;
  flex-direction: row;
  margin-left: -1.5rem;
  margin-right: -1.5rem;
  transition: flex-basis 500ms linear;
}

.justify-center {
  justify-content: center;
  transition: all 500ms ease-in-out;
}

/* using a mobile-first approach, set base column width to be 100% and we'll update it using media queries for larger screen sizes */
.card-column {
  flex: 1 0 100%;
  padding: 1.5rem;
  /* when the screen resizes, make it so our columns don't jump in size */
  transition: flex-basis 500ms linear;
  margin-bottom: 1.5rem;
  /* transition: all 500ms ease-in-out; */
}

.img-card {
  max-width: 40%;
  transition: all 500ms ease-in-out;
}

.repo-link {
  margin-top: 15px;
}
